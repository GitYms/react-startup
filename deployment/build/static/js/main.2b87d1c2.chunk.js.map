{"version":3,"sources":["pages/Index/Index.module.less","sagas/post.js","constants/post.js","constants/user.js","sagas/user.js","sagas/index.js","reducers/user.js","reducers/post.js","reducers/index.js","pages/Index/Index.js","actions/user.js","actions/post.js","layouts/Layout.js","App.js","config/index.js","index.js"],"names":["module","exports","fetchPostByPage","watchFetchPostByPage","pageIndex","call","axios","get","response","put","type","payload","data","takeLatest","fetchOneUser","watchFetchUser","rootSaga","fork","initialState","users","content","combineReducers","user","state","action","error","post","selectUser","createSelector","selectPost","memo","dispatch","useDispatch","useSelector","handleGetUser","useCallback","className","styles","index","onClick","JSON","stringify","props","children","App","exact","path","render","to","component","Index","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2b87d1c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"index\":\"index--2Fjkc\"};","import { takeLatest, call, put } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { FETCH_POST_REQUEST, FETCH_POST_SUCCESS, FETCH_POST_FAILURE } from '../constants/post';\r\n\r\nfunction* fetchPostByPage({ pageIndex }) {\r\n  try {\r\n    const response = yield call(\r\n      axios.get,\r\n      `https://jsonplaceholder.typicode.com/posts/${pageIndex}`,\r\n    );\r\n    yield put({ type: FETCH_POST_SUCCESS, payload: response.data });\r\n  } catch (e) {\r\n    yield put({ type: FETCH_POST_FAILURE, payload: e });\r\n  }\r\n}\r\n\r\nexport function* watchFetchPostByPage() {\r\n  yield takeLatest(FETCH_POST_REQUEST, fetchPostByPage);\r\n}\r\n","export const FETCH_POST_REQUEST = 'FETCH_POST_REQUEST';\r\nexport const FETCH_POST_SUCCESS = 'FETCH_POST_SUCCESS';\r\nexport const FETCH_POST_FAILURE = 'FETCH_POST_FAILURE';\r\n","export const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_FAILURE = 'FETCH_USER_FAILURE';\r\n","import { takeLatest, call, put } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { FETCH_USER_SUCCESS, FETCH_USER_FAILURE, FETCH_USER_REQUEST } from '../constants/user';\r\n\r\nfunction* fetchOneUser() {\r\n  try {\r\n    const response = yield call(axios.get, 'https://jsonplaceholder.typicode.com/users');\r\n    yield put({ type: FETCH_USER_SUCCESS, payload: response.data[0] });\r\n  } catch (e) {\r\n    yield put({ type: FETCH_USER_FAILURE, payload: e });\r\n  }\r\n}\r\n\r\nexport function* watchFetchUser() {\r\n  yield takeLatest(FETCH_USER_REQUEST, fetchOneUser);\r\n}\r\n","import { fork } from 'redux-saga/effects';\r\nimport { watchFetchPostByPage } from './post';\r\nimport { watchFetchUser } from './user';\r\n\r\nexport default function* rootSaga() {\r\n  yield fork(watchFetchPostByPage);\r\n  yield fork(watchFetchUser);\r\n}\r\n","import { FETCH_USER_FAILURE, FETCH_USER_SUCCESS } from '../constants/user';\r\n\r\nconst initialState = {\r\n  users: null,\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_USER_SUCCESS:\r\n      return {\r\n        users: action.payload,\r\n      };\r\n    case FETCH_USER_FAILURE:\r\n      return {\r\n        error: action.payload,\r\n        users: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FETCH_POST_FAILURE, FETCH_POST_SUCCESS } from '../constants/post';\r\n\r\nconst initialState = {\r\n  content: null,\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_POST_SUCCESS:\r\n      return {\r\n        content: action.payload,\r\n      };\r\n    case FETCH_POST_FAILURE:\r\n      return {\r\n        content: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport user from './user';\r\nimport post from './post';\r\n\r\nexport default combineReducers({ user, post });\r\n","import React, { memo, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createSelector } from 'reselect';\r\nimport { getPostByPage } from '../../actions/post';\r\nimport { getOneUser } from '../../actions/user';\r\nimport styles from './Index.module.less';\r\n\r\nconst selectUser = createSelector(\r\n  state => state,\r\n  state => state.user,\r\n);\r\nconst selectPost = createSelector(\r\n  state => state,\r\n  state => state.post,\r\n);\r\n\r\nfunction Index() {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const post = useSelector(selectPost);\r\n  const handleGetUser = useCallback(() => {\r\n    dispatch(getOneUser());\r\n  }, [dispatch]);\r\n  return (\r\n    <div className={styles.index}>\r\n      <div className=\"left\">\r\n        <button type=\"button\" onClick={handleGetUser}>\r\n          获取用户\r\n        </button>\r\n        <p>{user.users && JSON.stringify(user.users)}</p>\r\n      </div>\r\n      <div className=\"right\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            dispatch(getPostByPage(1));\r\n          }}\r\n        >\r\n          获取一篇文章\r\n        </button>\r\n        <p>{post.content && JSON.stringify(post.content)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(Index);\r\n","import { FETCH_USER_REQUEST } from '../constants/user';\r\n\r\nexport const getOneUser = () => ({\r\n  type: FETCH_USER_REQUEST,\r\n});\r\n","import { FETCH_POST_REQUEST } from '../constants/post';\r\n\r\nexport const getPostByPage = pageIndex => ({\r\n  type: FETCH_POST_REQUEST,\r\n  pageIndex,\r\n});\r\n","import React, { memo } from 'react';\r\nimport './Layout.less';\r\n\r\nfunction Layout(props) {\r\n  return (\r\n    <div className=\"layout\">\r\n      <div className=\"layout-header\">Header</div>\r\n      <div className=\"layout-content\">{props.children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(Layout);\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { CONTEXT } from './config';\r\nimport Index from './pages/Index/Index';\r\nimport Layout from './layouts/Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact path={`${CONTEXT}/`} render={() => <Redirect to=\"/index\" />} />\r\n          <Route path={`${CONTEXT}/index`} component={Index} />\r\n        </Switch>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const CONTEXT = '';\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.less';\r\nimport rootSaga from './sagas/index';\r\nimport rootReducer from './reducers';\r\nimport App from './App';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}